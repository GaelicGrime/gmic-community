#@gmic
#
#  File        : afre.gmic
#                ( G'MIC commands file )
#
#  Description : Personal G'MIC filters done by afre.
#
#  Copyright   : afre/pixls.us
#                ( https://discuss.pixls.us/u/afre )
#
#  License     : CeCILL v2.0
#                ( http://www.cecill.info/licences/Licence_CeCILL_V2-en.html )
#
#  This software is governed by the CeCILL  license under French law and
#  abiding by the rules of distribution of free software.  You can  use,
#  modify and/ or redistribute the software under the terms of the CeCILL
#  license as circulated by CEA, CNRS and INRIA at the following URL
#  "http://www.cecill.info".
#
#  As a counterpart to the access to the source code and  rights to copy,
#  modify and redistribute granted by the license, users are provided only
#  with a limited warranty  and the software's author,  the holder of the
#  economic rights,  and the successive licensors  have only  limited
#  liability.
#
#  In this respect, the user's attention is drawn to the risks associated
#  with loading,  using,  modifying and/or developing or reproducing the
#  software by the user in light of its specific status of free software,
#  that may mean  that it is complicated to manipulate,  and  that  also
#  therefore means  that it is reserved for developers  and  experienced
#  professionals having in-depth computer knowledge. Users are therefore
#  encouraged to load and test the software's suitability as regards their
#  requirements in conditions enabling the security of their systems and/or
#  data to be ensured and,  more generally, to use and operate it in the
#  same conditions as regards security.
#
#  The fact that you are presently reading this means that you have had
#  knowledge of the CeCILL license and that you accept its terms.
#

#@gui _<b>Colors</b>
#---------------------

#@gui Darken Sky : fx_darken_sky, fx_darken_sky_preview(1)
#@gui : Strength = float(.75,0,1)
#@gui : Contrast = float(5,0,5)
#@gui : Blend Mode = choice(0,"Overlay","Softlight")
#@gui : sep = separator(), Normalize = bool(1)
#@gui : Brighten = float(0,0,1)
#@gui : sep = separator(), Preview type = choice("Full","Forward horizontal","Forward vertical","Backward horizontal","Backward vertical","Duplicate top","Duplicate left","Duplicate bottom","Duplicate right","Duplicate horizontal","Duplicate vertical","Checkered","Checkered inverse")
#@gui : sep = separator(), note = note("Based on <a href="https://discuss.pixls.us/t/deep-blue-sky-effect/4506"><i>Carmelo_DrRaw</i>'s tutorial</a>")
#@gui : sep = separator(), note = note("<small>Author: <i><a href="https://discuss.pixls.us/u/afre">Afre/pixls.us</a></i>.      Latest update: <i>2017/01/07</i>.</small>")
fx_darken_sky :
  mode=${arg\ 1+$3,overlay,softlight}
  repeat $! l[$>] split_opacity l[0]
    if iM>255 -/ 257 bit=1 fi
    +l
      s c rm.. remove_hotpixels.. 5 guided.. .,1,{.01*255^2}
      - - {im} min 128 - 128 * {(5+$2)/10} + 128
    endl
    blend $mode,$1
    if $4 n 0,255 fi
    apply_curve 1,0,0,{ia},{ia+(sqrt(iv)*$5/2)},255,255
    if $bit * 257 fi
  endl a c endl done

fx_darken_sky_preview :
  gui_split_preview "fx_darken_sky $*",$-1


#@gui _<b>Testing</b>
#---------------------
#@gui Afre

#@gui Vigrect : fx_vigrect, fx_vigrect_preview(1)
#@gui : Size(%) = int(10,1,25)
#@gui : Blur(%) = int(10,5,20)
#@gui : Opacity = float(.75,.5,1)
#@gui : sep = separator(), note = note("Filter by <i>afre</i>. Latest update: <i>2017-01-05</i>.")
fx_vigrect :
  p={min(w,h)*$1/100}
  +to_gray rectangle. {[$p,$p,w-$p,h-$p]}
  f. i==0?0:ia#0 b. {min(w,h)*$2/100} *. $3 - c 0,255

fx_vigrect_preview :
  fx_vigrect $*

#@gui Gamify : fx_gamify, fx_gamify_preview(1)
#@gui : Lightness = int(50,50,60)
#@gui : Chroma = float(2,1.1,5)
#@gui : sep = separator(), Normalize = bool(1)
#@gui : Contrast = float(1,1,1.5)
#@gui : sep = separator(), Preview type = choice("Full","Forward horizontal","Forward vertical","Backward horizontal","Backward vertical","Duplicate top","Duplicate left","Duplicate bottom","Duplicate right","Duplicate horizontal","Duplicate vertical","Checkered","Checkered inverse")
#@gui : sep = separator(), note = note("Filter by <i>afre</i>. Latest update: <i>2017-01-05</i>.")
fx_gamify :
  if $3 n 0,255 fi
  rgb2lab lab2lch
  s c n... $1,100 *.. $2 a c
  lch2lab lab2rgb
  split_details 2
  l.. adjust_colors 0,{-$4/1.5*20} endl
  *. $4
  + c 0,255

fx_gamify_preview :
  gui_split_preview "fx_gamify $*",$-1

#@gui Hessian Norm : fx_hnorm, fx_hnorm_preview(0)
#@gui : Strength = float(1,.5,1.5)
#@gui : Contrast = int(50,1,99)
#@gui : Invert = bool(0)
#@gui : sep = separator(), note = note("Filter by <i><a href="https://discuss.pixls.us/u/afre">afre</a></i>. Latest update: <i>2018-05-09</i>.")
fx_hnorm :
  af_hnorm ^ $1
  c 0,$2%
  if $3 negate fi
  n 0,255

af_hnorm:
  repeat $! l[$>]
    +hessian[0] xx +hessian[0] xy +hessian[0] xz +hessian[0] yy +hessian[0] yz hessian[0] zz
    sqr + s c + sqrt
  endl done

fx_hnorm_preview :
  fx_hnorm $*

#@gui Clean Text : afre_cleantext, afre_cleantext_preview(0)
#@gui : note = note("<strong>Cleans scanned text. &nbsp; Filter by <a href="https://discuss.pixls.us/u/afre">afre</a> 2019.</strong>\n\n")
#@gui : Clean = int(8,0,10)
#@gui : Range = float(1,0.2,1)
#@gui : Black = int(80,0,100)
#@gui : White = int(95,0,100)
#@cli afre_cleantext : 0<=_clean<=10, 0.2<=_range<=1, 0<=_black<=100, 0<=_white<=100
#@cli : Cleans scanned text.
#@cli : Default values: clean=8, range=1, black=80, white=95.
afre_cleantext :
  check "${1=8}>=0 && ${2=1}>=0.2 && ${3=80}>=0 && ${4=95}>=0"
  check "$1<=10 && $2<=1 && $3<=100 && $4<=100"
  e[^-1] " Clean scanned text using clean=$1, range=$2, black=$3, white=$4."
  v - c={(11-$1)*2+1} +dilate $c erode. $c - n 0,255
  retinex , norm n 0,1 f 1-gauss(i,$2)
  if $3!=$4 c $3%,$4% else c $3%,{$4+.5}% fi n 0,255 round v +

afre_cleantext_preview :
  afre_cleantext $*


#@cli Core Commands
#---------------------

#@cli afre_y50 : colour_space={ 0=Rec.709 | 1=Rec.2020 }
#@cli : Computes D50 luminance.
#@cli : Default value: 'colour_space=1'.
afre_y50: skip ${1=1}
  v - if !isbool($1) v + error[] " * (>_<) * $0: Parameter must be '0' (Rec.709) or '1' (Rec.2020)." fi
  if $1 Y="Rec.2020" else Y="Rec.709" fi
  v + e[^-1] "Compute luminance ("$Y") of image$?." v -
  repeat $! l[$>]
    if s!=3 v + error[] " * (>_<) * $0: Image ["$>"] '"{b}"' does not have 3 channels (RGB)." fi
    sh 0 sh[0] 1 sh[0] 2
    if $1 *[1] 0.27904 *[2] 0.67535 *[3] 0.04561  # Rec.2020
    else *[1] 0.22249 *[2] 0.7169 *[3] 0.06061 fi # Rec.709
    +[1-3] rm[1] channels 0
  endl done v +


# Local Variables:
# mode: sh
# End:
#
# (End of G'MIC custom commands)
