%% x "mkdir -p img" rm %%
|+ [Cheat Home](cheatsheet.html) | [Custom Cheat](custom_cheat.html) | __Display Cheat__ |                    |                    |                    
|                    |                    |                    |                    |                    |                    
%%  images/e_letter.png -r. 10%,10%,100%,100%,5 o. img/e_ltr_norm.png n. {0.7*ia},{1.3*ia} -o. img/e_ltr_fade.png rm %%
= thedisplaycommandlies
### Cheat #3: The `-display` Command Lies
You want to shrink and fade but preview before committing. "That's what `-display` is for!" you think.

|-![eletterfade](img/e_ltr_fade.png)|Fade effect game plan: ''normalize'' in a narrow range around the image average (`ia`).
|`shrinkfade: ` \n `  -resize. 10%,10%,100%,100%,5 ` \n `  -normalize {0.7*ia},{1.3*ia} `|shrink to ten percent, normalize to a narrow\nrange around image average. A [math expression](https://gmic.eu/reference/mathematical_expressions.html#top)\nfinds that range around the predefined `ia` variable\n(for "image average").
|![eletternorm](img/e_ltr_norm.png)|`gmic shrinkfade.gmic -input e_letter.png -shrinkfade -display` \nThis is what you get after `-display`. It's wrong. The results aren't faded.

The results are not faded! But `-shrinkfade` is _right there_ on the command line (you exclaim)! And ___Right There!___ in the command file itself is the math expression `{0.7*ia},{1.3*ia}`!!! What's more, G'MIC's _very own processing log reports a narrow range!!!_

===
`…min = 29750.1, max = 49583.6, mean = 41754.9,…`
===

Angrily, you write an all caps post to the G'MIC developers: "DO SUCH OBTUSE STUPIDITIES COME NATURALLY TO YOU GUYS OR DID YOU HAVE TO _STUDY ‽‽‽_"

The developers shrug, pin the post to the wall — with a million others like it (well, maybe a thousand others like it) — and then depart for a fine repast at _La Cafétéria de l'ENSI_ or some such classy joint like that.
