%% x "mkdir -p img" rm %%
|+ [Cheat Home](cheatsheet.html) | [Custom Cheat](custom_cheat.html) | [Display Cheat](display_cheat.html) | **Debug Cheat** |                    |                    
|                    |                    |                    |                    |                    |                    
### Cheat #4: You've Broken Things. Now What?
__TL;DR:__ You have written a G'MIC pipeline. It doesn't work.
|Event:     |__The pipeline runs without error, but the images cannot be seen or look weird in paint programs or the results are substandard.__|  
|Check:     |G’MIC writes a log to your shell, itemizing the operations that occurred. Are there any curious, surprising or inexplicable items? See [Running Commands](https://gmic.eu/tutorial/basics.html#running_commands) and [Introduction to the G'MIC command line tool 'gmic'](https://github.com/dtschump/gmic-community/wiki/Introduction-to-the-G%27MIC-command-line-tool-%27gmic%27)| □
|Check:     |Do summaries produced by `-print` or `-display` correspond to the image you think you have? In G'MIC's log, look for lines with image list position numbers like `[0] = 'cat'`. Do the image statistics make sense? Are you outputting to unsigned image formats but `im` is less than zero? See ''Images as Data Sets''| □
|Check:     |Recall that `-display` is an indicator, not a proofing tool. See [Cheat #3: The -display Command Lies](display_cheat.html)| □ 
|Event:     |__G'MIC doesn't run the pipeline. It prints some error message about being unable to load an image — which is actually a part of the command.__|  
|Check:     |When G'MIC unexpectedly infers that a command line item is a file to be read as an input, it is usually a sign that a misplaced space charcter is causing G'MIC to block out the command line in an unexpected way. Are space characters following the commas of command arguments? See [Items of a Processing Pipeline](Items of a Processing Pipeline)| □
|
Updated: 30-August-2021 14:52 UTC Commit:
