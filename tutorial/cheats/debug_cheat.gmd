%% x "mkdir -p img" rm %%
|+ [Cheat Home](cheatsheet.html) | [Custom Cheat](custom_cheat.html) | [Display Cheat](display_cheat.html) | **Debug Cheat** |                    |                    
|                    |                    |                    |                    |                    |                    
### Cheat #4: You've Broken Things. Now What?
__TL;DR:__ You have written a G'MIC pipeline. It doesn't work. (1) Unexpected image metrics (2) Shell interference (3) Misplaced spaces (4) Mistaken argument values account for the vast majority of problems. These are easily detected/fixed by running down a check list.
|-Event:     |__The pipeline runs without error, but images are black or look weird or the results are substandard.__|  
|Check:     |G’MIC writes a log to your shell. Are there any curious, surprising or inexplicable items? See [Running Commands](https://gmic.eu/tutorial/basics.html#running_commands) and [Introduction to the G'MIC command line tool G'MIC](https://github.com/dtschump/gmic-community/wiki/Introduction-to-the-G%27MIC-command-line-tool-%27gmic%27)| □
|Check:     |Do image metrics produced by `-print` or `-display` comply with constraints imposed by formats like `.png,` `.tiff,` or `.jpg`? The G'MIC log writes metrics after image list positions like `[0] =` _<an image name>_. Do the metrics make sense? Are you outputting to unsigned image formats (`.jpg`, `.png`) but the image `im` metric is less than zero? See ''Images as Data Sets''| □
|Check:     |Recall that `-display` indicates; it does not prove. ` display0 ` more closely approximates an image proofing tool. See [Cheat #3: The -display Command Lies](display_cheat.html)| □
|Check:     |Are command arguments sane? Recall that commands generally expect arguments in a certain order. Depending on how they are written, commands may permit certain arguments to be omitted and defaults are applied. That means mis-ordered argument lists may not even raise an error, as G'MIC may apply defaults for arguments. Use `gmic h` _<your command>_ for argument list ordering and what arguments have default values.| □
|Event:     |__G'MIC doesn't run the pipeline. It prints some error message about failing to load an image — but the "image" is actually a part of the command!__|  
|Check:     |Are there misplaced space charcters? Only commas separate items in argument lists, not commas _and_ spaces. When G'MIC identifies an unexpected item as an image file or assigns the wrong values to arguments, it is usually a sign that misplaced space characters are causing G'MIC to block out the command line in a way other than your intents. See [Items of a Processing Pipeline](https://gmic.eu/reference/items_of_a_processing_pipeline.html#top).| □
If this
Updated: 03-September-2021 12:15 UTC Commit: ac07d69f1082
