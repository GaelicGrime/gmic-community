
# Tiled Art
%% x "mkdir -p img" %%
%% -input https://upload.wikimedia.org/wikipedia/commons/thumb/3/3d/Mosaic_of_Justinianus_I_-_Basilica_San_Vitale_%28Ravenna%29.jpg/173px-Mosaic_of_Justinianus_I_-_Basilica_San_Vitale_%28Ravenna%29.jpg -o. img/justinianus.jpg rm 0 %%
|![justinianus](img/justinianus.jpg)|Mosaics are an ancient medium. Examples date back to the third century B.C, but the form is still acitve, employing materials from [seashells](https://commons.wikimedia.org/wiki/Category:Shell_mosaics#/media/File:KO_Arenberg_St_Nikolaus_detail.JPG) to [bottle caps](https://commons.wikimedia.org/wiki/File:Bottlecap_mosaic.jpg). Orientation itself is recruited to its services. Artists turn tiles to align with an image's dominant edges, giving them greater clarity. Other ranks of tiles follow. From the dominant edges wavefronts ripple outward and – inevitably – collide. Work is cut out for the mosaic artist here, who must carefully chip compromises all along the collision fronts. Interesting work if you can get it. *Image: Mosaic of Justinianus I - Basilica San Vitale (Ravenna) Wikimedia Commons: Petar Milošević*

%% input images/stroke.png r2dx. 75%,5 -o. img/stroke_small.png gtutor_tileit. 0.5,0.75,0.75,0,1,45,16,1 -n. 0,255 -o. img/stroke_tiled.png rm 0 %%
===
|![nottiled](img/stroke_small.png)|![tiled](img/stroke_tiled.png)|
| **Old Stroke** | **A Tiled Old Stroke**|
===

## Introduction

Orienting tiles along dominant edges is one of many kinds of surface [tessellations](https://en.wikipedia.org/wiki/Tessellation). Strictly speaking, the technique outlined here is not a tesselation as coverage is not guaranteed to be complete. Collision fronts and rank mismatches almost always give rise to gaps. Mosaic artists keep various kinds of workarounds in their kits, from breaking regular tiles into irregular shapes and daubing extra plaster in less significant holes.  
That said, the technique outlined here is not without its mathematical interest. Edge detection and orientation have long been parts of G'MIC's repertoire, as edge-preserving anisotropic smoothing is one of the oldest parts of its kit.

The game is straightforward:
1. Harness ''-distance'' to establish measures from arbitrary points to edges.
2. Harness ''-gradient'' to establish their two-dimensional orientations.
3. From these data, derive homogeneous matrices to translate, scale and rotate the corners of a reference tile, situated at the origin, to placements situated in the mosaic.
4. Render the placed tiles.
5. Probably there will be missed spots. We punt.

Here is our play.

## Walkthrough
The heart of the matter is step 3: moving, scaling and rotating tiles according to the nature of proximate edges. Garnering information about those edges stem from long-standing G'MIC commands [-distance](https://gmic.eu/oldtutorial/_distance.shtml) and [-gradient](https://gmic.eu/oldtutorial/_gradient.shtml) which have tutorials, so only need summary treatments here.     
===
%% input 256,256,1,1 gaussian. 20%,15%,40 round. 0.333 +n. 0,255 o. img/oval.png rm. f. ">abs(i-j(1,1,0,0,0,1))>iv?1:abs(i-j(1,0,0,0,0,1))>iv?1:0" +n. 0,255 -o. img/ovalout.png rm 0 %%
|![oval](img/oval.png)|![ovalout](img/ovalout.png)|
|**flat color**|**edges of same**|
===
|1.  | __Locate edges__ \n\nFor illustration, we stick to single channel images which can convey the essential ideas. We take the [-luminance]() of images in a colorspace. \n\n A contour detector due to Jerome Boulanger forward differs the leading and lower diagonal pixels with respect to the center of a five by five grid. A forward differencing scheme, one need not pay heed to the rear quadrants. Of the forward quadrants, one need only assess the southeast and due east pixels. What of the northeast? That direction was the due east in the previous row scan, so is among the accounted. Thus, two differences suffice:| 
~~~
  -fill. ">abs(                      \
                i-j(1,1,0,0,0,1)     \
              )>iv?                  \
              1:                     \
              abs(                   \
                    i-j(1,0,0,0,0,1) \
                 )>iv?               \
                 1:0"                \
 -name[-1] outline                   \
~~~
|    |The comparison thresholds against the overall image variance; a forward difference less than this fails to be an edge for tiling purposes. 

|2.  | __Step title__ \n\n Step Text
~~~
                                     \
                                     \
                                     \
~~~



## Topic - Some next topic
